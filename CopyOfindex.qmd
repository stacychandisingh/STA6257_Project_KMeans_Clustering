---
title: "Demonstration of a K-Means Clustering Algorithm on Spotify music features"
author: "Stacy Chandisingh, Leo Pena, Shaif Hossain"
date: '`r Sys.Date()`'
format:
  revealjs:
    theme: dark
    scrollable: true
    smaller: true
    margin: 0.01
    auto-stretch: false
    width: 1200
    max-scale: 1.5
    view-distance: 30
    mobile-view-distance: 30
editor: visual
course: STA 6257 - Advanced Statistical Modeling
bibliography: references.bib # file contains bibtex for references
link-citations: true
self-contained: true
execute: 
  warning: false
  message: false
  
---

## Introduction: What is K-Means Clustering?

- An unsupervised machine learning technique

- K-means is a fixed number (k) of clusters in a dataset

- Used to draw conclusions about a dataset based on groups of similar variables

- Different ways to determine the 'k'

- Used a Spotify dataset focused on attributes (examples: tempo and popularity) surrounding a music track to group similar features by clustering them together

## Methods: diving into the K-Means algorithm (add wcss and euclidean distance as two separate tabs under methods)

- Descriptive statistics/histograms/correlation matrix to visualize the spread of the data.

- Preprocess and scale data for ease of comparability.

- Libraries used: tidyverse, cluster, and factoextra. 

- The Euclidean distances are calculated to get the clustering distances measurement

- The distance data is visualized using the fviz_dist() function in R from the factoextra package. 

$$WCSS = \sum_{i=1}^{K}\sum_{j=1}^{ni}\left \| x_{ij} - c_{i} \right \|^2$$

- K is number of clusters. <br>
- n~i~ is number of data points in cluster i. <br>
- C~i~ is centroid. <br>
- X~ij~ is the *j*^th^ data point in cluster I. <br>

The WCSS can be used to measure how the data within a cluster are grouped. The variables that are used from the dataset are then scaled. Then, after they are scaled the next steps are:
 
Euclidean distance is calculated between each attribute, and the cluster center:
$$ D_{euclidean}(x, Ki) = \sqrt{\sum_{i=1}^{n}((x_{i}) -(k)_{ij})^{2}} $$

Where: <br>

- x is data point. <br>
- k~i~ is cluster center. <br>
- n is number of attributes. <br>
- x~i~ is the *i*^th^ attribute of the data point. <br>
- K~ij~ is the *j*^th^ attribute of the centroid of cluster i. <br>
 

## Assumptions
 
- K-means assumes the clusters are symmetric, there can be asymmetrical clusters. <br>
- The data is assumed to be independent. <br>
- Properly scaled data is important for K-Means, it can lead to uneven clusters. <br>
- There is a fixed number of clusters for K-Means. <br>
 

## Analysis and Results: Data and Vizualisation
Data source: [Spotify data from Kaggle](https://www.kaggle.com/code/ryanholbrook/clustering-with-k-means/data?select=spotify.csv)


## Correlation Matrix (add image here of corr plot)

In the correlation plot, the darker the blue the greater the correlation between the variables. The chart shows a positive correlation between energy and loudness and a negative correlation between acousticness and energy.

## Histogram (add histogram)

Show histogram of variables to assess distribution and normality



## Show the Elbow Curve

Add elbow graph curve here

## Visualizing the data clusters

Show the clustered groups here (graph)

## What did we find?

Three clusters of similar music data

Provide an example of how we searched for a song within a particular cluster?

## Conclusions

- K-Means provides a simple yet insightful way to glean data insights.

- Unsupervised machine learning finds hidden data structures from an unlabeled dataset and its aim is to find the similarities within the data groups.

- Three cluster groups were found.

- We can offer song recommendations based on this analysis

- We recommend using other K-Means clustering methods to verify whether results are similar.



## References
